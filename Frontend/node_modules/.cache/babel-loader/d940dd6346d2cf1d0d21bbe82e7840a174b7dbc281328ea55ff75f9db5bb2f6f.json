{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\ReleaseRead2\\\\ReleaseReads\\\\Frontend\\\\src\\\\components\\\\Slider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = ({\n  images\n}) => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentSlide(prevSlide => prevSlide === images.length ? 0 : prevSlide + 1);\n    }, 3000); // Change interval time as per your requirement\n    return () => clearInterval(interval);\n  }, [images]);\n  const prevSlide = () => {\n    setCurrentSlide(prevSlide => prevSlide === 0 ? images.length : prevSlide - 1);\n  };\n  const nextSlide = () => {\n    setCurrentSlide(prevSlide => prevSlide === images.length ? 0 : prevSlide + 1);\n  };\n  if (!images || images.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No images available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Duplicate the first and last images to create a continuous loop\n  const loopedImages = [images[images.length - 1], ...images, images[0]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-64 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute flex transition-transform duration-500\",\n      style: {\n        transform: `translateX(-${currentSlide * (100 / loopedImages.length)}%)`,\n        width: `${loopedImages.length * 100}%` // Set the width to accommodate all looped images\n      },\n      children: loopedImages.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Slide ${index}`,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevSlide,\n      className: \"absolute top-0 bottom-0 left-0 flex items-center justify-center w-12 bg-black bg-opacity-50 text-white hover:bg-opacity-75\",\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextSlide,\n      className: \"absolute top-0 bottom-0 right-0 flex items-center justify-center w-12 bg-black bg-opacity-50 text-white hover:bg-opacity-75\",\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"/jm+XmndjAYlDCFyCnfFEXJOloU=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Slider","images","_s","currentSlide","setCurrentSlide","interval","setInterval","prevSlide","length","clearInterval","nextSlide","children","fileName","_jsxFileName","lineNumber","columnNumber","loopedImages","className","style","transform","width","map","image","index","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/ReleaseRead2/ReleaseReads/Frontend/src/components/Slider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Slider = ({ images }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentSlide((prevSlide) =>\r\n        prevSlide === images.length ? 0 : prevSlide + 1\r\n      );\r\n    }, 3000); // Change interval time as per your requirement\r\n    return () => clearInterval(interval);\r\n  }, [images]);\r\n\r\n  const prevSlide = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === 0 ? images.length : prevSlide - 1\r\n    );\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === images.length ? 0 : prevSlide + 1\r\n    );\r\n  };\r\n\r\n  if (!images || images.length === 0) {\r\n    return <div>No images available</div>;\r\n  }\r\n\r\n  // Duplicate the first and last images to create a continuous loop\r\n  const loopedImages = [images[images.length - 1], ...images, images[0]];\r\n\r\n\r\n  return (\r\n    <div className=\"relative w-full h-64 overflow-hidden\">\r\n      <div\r\n        className=\"absolute flex transition-transform duration-500\"\r\n        style={{\r\n          transform: `translateX(-${(currentSlide * (100 / loopedImages.length))}%)`,\r\n          width: `${loopedImages.length * 100}%`, // Set the width to accommodate all looped images\r\n        }}\r\n      >\r\n        {loopedImages.map((image, index) => (\r\n          <div key={index} className=\"w-full h-full\">\r\n            <img\r\n              src={image}\r\n              alt={`Slide ${index}`}\r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        onClick={prevSlide}\r\n        className=\"absolute top-0 bottom-0 left-0 flex items-center justify-center w-12 bg-black bg-opacity-50 text-white hover:bg-opacity-75\"\r\n        \r\n      >\r\n        {\"<\"}\r\n      </button>\r\n      <button\r\n        onClick={nextSlide}\r\n        className=\"absolute top-0 bottom-0 right-0 flex items-center justify-center w-12 bg-black bg-opacity-50 text-white hover:bg-opacity-75\"\r\n        \r\n      >\r\n        {\">\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}